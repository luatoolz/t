describe("pkg", function()
  local t, meta, module, loader
  setup(function()
    t = require "t"
    meta = require "meta"
    module = meta.module
    loader = meta.loader
  end)
  it("pkg", function()
    assert.equal(loader(module('meta').base), t.pkg('meta'))
    assert.equal(loader(module('meta.loader').base), t.pkg('meta.loader'))
    assert.equal(loader(module('testdata/exloader/base').base), t.pkg('testdata/exloader/base'))
    assert.equal(loader(module('testdata/exloader/base/sub').base), t.pkg('testdata/exloader/base'))
    assert.equal(loader(module('testdata/exloader/base').base), t.pkg('testdata/exloader/base/sub'))
  end)
  it("pkg.name", function()
    assert.equal('meta', t.pkg.name('meta'))
    assert.equal('meta', t.pkg.name('meta.loader'))
    assert.equal('testdata', t.pkg.name('testdata'))
    assert.equal('testdata', t.pkg.name('testdata/def'))
    assert.equal('testdata/exloader/base', t.pkg.name('testdata/exloader/base'))
    assert.equal('testdata/exloader/base', t.pkg.name('testdata/exloader/base/sub'))
  end)
  it("pkg.parent", function()
    assert.equal(nil, t.pkg.parent('meta'))
    assert.equal(nil, t.pkg.parent('meta.loader'))
    assert.equal(nil, t.pkg.parent('testdata'))
    assert.equal(loader('testdata'), t.pkg.parent('testdata/exloader'))
    assert.equal(loader('testdata/exloader'), t.pkg.parent('testdata/exloader/base'))
    assert.equal(loader('testdata/exloader'), t.pkg.parent('testdata/exloader/base/sub'))
  end)
end)